{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAA0C,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAIpF,MAAM,OAAO,cAAe,SAAQ,SAAS;IAE3C,KAAK,CAAC,WAAW,CAAC,SAAiB,EAAE,YAA8B;QACjE,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACvC,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IACD,KAAK,CAAC,UAAU;QACd,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAC9C,CAAC;IACD,KAAK,CAAC,cAAc;QAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IACD,aAAa,CAAC,OAA8B;QAC1C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAChC,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;IACnD,CAAC;IACD,gBAAgB,CAAC,OAA8B;QAC7C,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACnC,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;IACtD,CAAC;IACD,gBAAgB;QACd,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IACjD,CAAC;IACD,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;CACF","sourcesContent":["import { ListenerCallback, PluginListenerHandle, WebPlugin } from '@capacitor/core';\n\nimport type { FlicButtonPlugin } from './definitions';\n\nexport class FlickButtonWeb extends WebPlugin implements FlicButtonPlugin {\n\n  async addListener(eventName: string, listenerFunc: ListenerCallback): Promise<PluginListenerHandle> {\n    console.log('ADD LISTENER', eventName);\n    return Promise.resolve({ remove: () => {} });\n  }\n  async getButtons(): Promise<{ buttons: { buttonId: string; name: string; state: number; }[]; }> {\n    console.log('BUTTONS');\n    return Promise.resolve({ buttons: [] });\n  }\n  isScanning(): Promise<{ scanning: boolean; }> {\n    console.log('SCANNING');\n    return Promise.resolve({ scanning: false });\n  }\n  async scanForButtons(): Promise<void> {\n    console.log('SCAN');\n  }\n  connectButton(options: { buttonId: string; }): Promise<{ message: string; }> {\n    console.log('CONNECT', options);\n    return Promise.resolve({ message: 'Connected' });\n  }\n  disconnectButton(options: { buttonId: string; }): Promise<{ message: string; }> {\n    console.log('DISCONNECT', options);\n    return Promise.resolve({ message: 'Disconnected' });\n  }\n  removeAllButtons(): Promise<{ message: string; }> {\n    console.log('REMOVE ALL');\n    return Promise.resolve({ message: 'Removed' });\n  }\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n}\n"]}